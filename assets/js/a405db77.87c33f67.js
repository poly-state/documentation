"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[945],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(i,".").concat(m)]||p[m]||u[m]||a;return n?o.createElement(f,s(s({ref:t},l),{},{components:n})):o.createElement(f,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=p;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d.mdxType="string"==typeof e?e:r,s[1]=d;for(var c=2;c<a;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1113:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return p}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),s=["components"],d={id:"advanced-uses",title:"Advanced Uses",slug:"/advanced-uses",sidebar_label:"Advanced Uses"},i="Advanced Uses",c={unversionedId:"advanced-uses",id:"advanced-uses",title:"Advanced Uses",description:"Here is an example store of todo items and it is written in OOP style. We strongly recommend to use TypeScript to write the code.",source:"@site/docs/05-advanced-uses.md",sourceDirName:".",slug:"/advanced-uses",permalink:"/docs/advanced-uses",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"advanced-uses",title:"Advanced Uses",slug:"/advanced-uses",sidebar_label:"Advanced Uses"},sidebar:"defaultSidebar",previous:{title:"TypeScript Support",permalink:"/docs/typeScript-support"},next:{title:"Writing Tests",permalink:"/docs/writing-tests"}},l=[{value:"Example",id:"example",children:[],level:3},{value:"Asynchronous Logic",id:"asynchronous-logic",children:[],level:3},{value:"UI and React",id:"ui-and-react",children:[],level:3}],u={toc:l};function p(e){var t=e.components,n=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"advanced-uses"},"Advanced Uses"),(0,a.kt)("p",null,"Here is an example store of todo items and it is written in OOP style. We strongly recommend to use TypeScript to write the code."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { getStoreClass } from '@poly-state/poly-state';\nimport { useStore } from '@poly-state/react';\n\ntype Todo = {\n    id: string;\n    text: string;\n    completed: 'incomplete' | 'complete';\n};\n\ntype TodoStoreState = {\n    count: number;\n    todos: Todo[];\n};\n\nconst initialState: TodoStoreState = {\n    count: 0,\n    todos: [],\n};\n\nclass TodoStore extends getStoreClass<TodoStoreState>() {\n    addTodo(todo: Todo) {\n        this.setState((state) => ({\n            ...state,\n            todos: [...state.todos, todo],\n            count: state.count + 1,\n        }));\n    }\n\n    removeTodo(id: string) {\n        this.setState((state) => ({\n            ...state,\n            todos: state.todos.filter((todo) => todo.id !== id),\n            count: state.count - 1,\n        }));\n    }\n\n    toggleTodo(id: string) {\n        this.setState((state) => ({\n            ...state,\n            todos: state.todos.map((todo) => {\n                if (todo.id === id) {\n                    return {\n                        ...todo,\n                        completed:\n                            todo.completed === 'incomplete' ? 'complete' : 'incomplete',\n                    };\n                }\n\n                return todo;\n            }),\n        }));\n    }\n}\n\nexport const todoStore = new TodoStore(initialState);\nexport const useTodoStore = () => useStore(todoStore);\n")),(0,a.kt)("h3",{id:"asynchronous-logic"},"Asynchronous Logic"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"class TodoStore extends getStoreClass<TodoStoreState>() {\n    async addAsyncTodo(text: string) {\n        const response = await fetch('/api/todos', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ text }),\n        });\n        const todo = (await response.json()) as Todo;\n\n        if (response.status === 200) {\n            this.setState((state) => ({\n                ...state,\n                todos: [...state.todos, todo],\n                count: state.count + 1,\n            }));\n        }\n    }\n\n    ///////////////////////////////////////\n}\n")),(0,a.kt)("h3",{id:"ui-and-react"},"UI and React"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { FC, ChangeEvent, KeyboardEvent, useState } from 'react';\nimport { todoStore } from './todo-store';\n\nexport const AddTodo: FC = () => {\n    const [text, setText] = useState<string>('');\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n        setText(e.target.value);\n\n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n        const trimmedText = e.target.value.trim();\n        // If the user pressed the Enter key:\n        if (e.key === 'Enter' && trimmedText) {\n            // Add the todo to the store with a async call:\n            todoStore.addAsyncTodo(trimmedText);\n            // And clear out the text input\n            setText('');\n        }\n    };\n\n    return (\n        <input\n            type='text'\n            placeholder='What needs to be done?'\n            autoFocus={true}\n            value={text}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n        />\n    );\n};\n")))}p.isMDXComponent=!0}}]);